<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Reserve A Space">bcde9043971a4110002ffef3a253af2f</cat_item>
        <cat_variable>IO:b761518f97da4110002ffef3a253afe6</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Reservation end datetime</name>
        <order/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
   if (isLoading || newValue == '') {
      return;
   }
	g_form.hideErrorBox("u_end_time");
	g_form.clearMessages();
	var scheduleType = g_form.getValue("duration_type");

	if(scheduleType != "hourly"   && newValue != ""){
		var startTimeValue = g_form.getValue("u_start_time");
		var endTimeValue = newValue;
		
		g_form.setValue("u_end_time",endTimeValue.split(" ")[0] +" "+ "23:59:00");
		
		if(startTimeValue != "")
			g_form.setValue("u_start_time",startTimeValue.split(" ")[0] +" "+ "00:00:00");
	}

	
	var a = false;
	var script7 = new GlideAjax("ReservationClientUtils");
	script7.addParam("sysparm_name", "dateIsOnHoliday");
	script7.addParam("sysparm_dateTime", newValue);
	script7.getXML(dateIsOnHoliday);

	function dateIsOnHoliday(response){
		var scriptResponse = response.responseXML.documentElement.getAttribute("answer");
		if(scriptResponse == "true"){
			a = true;
			g_form.showErrorBox("u_end_time","Date is on holiday", true);
		}
	}
	
	var a1= false;
	if(a == false){
		var script = new GlideAjax("ReservationClientUtils");
		script.addParam("sysparm_name", "dateIsPastCurrentTime");
		script.addParam("sysparm_dateTime", newValue);
		validation = "dateIsPastCurrentTime";
		script.getXML(getAnswer);
	}
	
	function getAnswer(response){
		var scriptResponse = response.responseXML.documentElement.getAttribute("answer");
		if(scriptResponse == "true"){
			a1 = true;
			g_form.showErrorBox("u_end_time","Datetime must be ahead the current time", true);
		}
	}
	
	
	var a2= false;
	if(g_form.getValue("u_start_time") != "" && a1 == false){
		var script3 = new GlideAjax("ReservationClientUtils");
		script3.addParam("sysparm_name", "endIsBeforeStart");
		script3.addParam("sysparm_sTime", g_form.getValue("u_start_time"));
		script3.addParam("sysparm_eTime", newValue);
		
		script3.getXML(endIsBeforeStart);
	}
	
	function endIsBeforeStart(response){
			var scriptResponse = response.responseXML.documentElement.getAttribute("answer");
			if(scriptResponse == "true"){
				a2 = true;
				if(scheduleType == "daily")
					g_form.showErrorBox("u_end_time","End  must be ahead or equal to Start",true);
				else{
					g_form.showErrorBox("u_end_time","End  must be ahead from Start",true);
				}
			}	
	}
	
	var a3= false;
	if(g_form.getValue("duration_type") == "hourly" && g_form.getValue("u_start_time") != "" && a2 == false){
		var script4 = new GlideAjax("ReservationClientUtils");
		script4.addParam("sysparm_name", "intervalIsNotEqualToHour");
		script4.addParam("sysparm_sTime", g_form.getValue("u_start_time"));
		script4.addParam("sysparm_eTime", newValue);
		
		script4.getXML(intervalIsNotEqualToHour);
	}
	
	function intervalIsNotEqualToHour(response){
			var scriptResponse = response.responseXML.documentElement.getAttribute("answer");
			if(scriptResponse == "true"){
				a3 = true;
				g_form.addInfoMessage("Schedule must be exact an hour and must be within the same day");
			} 
	}
	
	
	//dateFieldIsNotWithinBusinessHours
	var a4= false;
	if(scheduleType == "hourly" && g_form.getValue("u_start_time") != "" && a3 == false){
		var script2 = new GlideAjax("ReservationClientUtils");
		script2.addParam("sysparm_name", "dateFieldIsNotWithinBusinessHours");
		script2.addParam("sysparm_sTime", g_form.getValue("u_start_time"));
		script2.addParam("sysparm_eTime", newValue);
		
		script2.getXML(dateFieldIsNotWithinBusinessHours);
	}
	
	
	function dateFieldIsNotWithinBusinessHours(response){
			var scriptResponse = response.responseXML.documentElement.getAttribute("answer");
			if(scriptResponse != "false"){
				a4 = true;
				if(scriptResponse.includes("start")){
					g_form.showErrorBox("u_start_time", "Datetime must be witin business hours. "
										+"\n Business hours: " + scriptResponse.split("|")[1], true);
				}
				if(scriptResponse.includes("end")){
					g_form.showErrorBox("u_end_time", "Datetime must be witin business hours. "
										+"\n Business hours: " + scriptResponse.split("|")[1], true);
				}
			} 
	}
	
	
	var a5= false;
	//dateIsNotWithinSpaceDays
	if( g_form.getValue("u_start_time") != "" && g_form.getValue("space") != "" && a4 ==false){
		var script6 = new GlideAjax("ReservationClientUtils");
		script6.addParam("sysparm_name", "dateIsNotWithinSpaceDays");
		script6.addParam("sysparm_sTime", g_form.getValue("u_start_time"));
		script6.addParam("sysparm_eTime", newValue);
		script6.addParam("sysparm_space", g_form.getValue("space"));
		
		script6.getXML(dateIsNotWithinSpaceDays);
	}
	
	function dateIsNotWithinSpaceDays(response){
			var scriptResponse = response.responseXML.documentElement.getAttribute("answer");
			var days = scriptResponse.split("|");
			g_form.hideFieldMsg("space");
			g_form.showFieldMsg("space", "Available on: "+ days[1], "info");
			
			if(g_form.getValue("duration_type") != "weekly" && g_form.getValue("duration_type") != "monthly" ){
				if(scriptResponse.includes("start")){
					g_form.showErrorBox("u_start_time", "Start datetime must be within Space's available "+
										"days", true);
				a5 = true;
				}
				if(scriptResponse.includes("end")){
					g_form.showErrorBox("u_end_time", "End datetime must be within Space's available "+
										"days", true);
				a5 = true;
				}
			}
	}

	
   
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-05-04 08:30:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d244d7349793c110002ffef3a253afe2</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Reservation end datetime</sys_name>
        <sys_overrides/>
        <sys_package display_value="Coworking space Reservation System" source="x_616811_coworking">5c180b8b970a0110002ffef3a253afe3</sys_package>
        <sys_policy/>
        <sys_scope display_value="Coworking space Reservation System">5c180b8b970a0110002ffef3a253afe3</sys_scope>
        <sys_update_name>catalog_script_client_d244d7349793c110002ffef3a253afe2</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-05-11 03:20:09</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
